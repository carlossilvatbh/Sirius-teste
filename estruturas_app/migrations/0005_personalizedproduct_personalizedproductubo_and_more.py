# Generated by Django 4.2.7 on 2025-07-06 21:33

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('estruturas_app', '0004_product'),
    ]

    operations = [
        migrations.CreateModel(
            name='PersonalizedProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome do produto personalizado', max_length=200)),
                ('descricao', models.TextField(blank=True, help_text='Descrição detalhada do produto personalizado')),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('ARCHIVED', 'Archived')], default='DRAFT', help_text='Status atual do produto personalizado', max_length=20)),
                ('version_number', models.PositiveIntegerField(default=1, help_text='Número da versão (incrementado automaticamente)')),
                ('configuracao_personalizada', models.JSONField(default=dict, help_text='Configurações específicas deste produto personalizado')),
                ('custo_personalizado', models.DecimalField(blank=True, decimal_places=2, help_text='Custo personalizado (sobrescreve cálculo automático)', max_digits=12, null=True)),
                ('observacoes', models.TextField(blank=True, help_text='Observações e notas específicas')),
                ('ativo', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('base_product', models.ForeignKey(blank=True, help_text='Product base para este produto personalizado', null=True, on_delete=django.db.models.deletion.CASCADE, to='estruturas_app.product')),
                ('base_structure', models.ForeignKey(blank=True, help_text='Legal Structure base para este produto personalizado', null=True, on_delete=django.db.models.deletion.CASCADE, to='estruturas_app.estrutura')),
                ('parent_version', models.ForeignKey(blank=True, help_text='Versão anterior deste produto personalizado', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child_versions', to='estruturas_app.personalizedproduct')),
            ],
            options={
                'verbose_name': 'Personalized Product',
                'verbose_name_plural': 'Personalized Products',
                'ordering': ['-version_number', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PersonalizedProductUBO',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ownership_percentage', models.DecimalField(blank=True, decimal_places=2, help_text='Percentual de propriedade (opcional)', max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0.01), django.core.validators.MaxValueValidator(100.0)])),
                ('role', models.CharField(choices=[('OWNER', 'Owner'), ('BENEFICIARY', 'Beneficiary'), ('DIRECTOR', 'Director'), ('SHAREHOLDER', 'Shareholder'), ('TRUSTEE', 'Trustee'), ('OTHER', 'Other')], default='OWNER', help_text='Papel do UBO neste produto', max_length=20)),
                ('data_inicio', models.DateField(help_text='Data de início da associação')),
                ('data_fim', models.DateField(blank=True, help_text='Data de fim da associação (opcional)', null=True)),
                ('observacoes', models.TextField(blank=True, help_text='Observações específicas desta associação')),
                ('ativo', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('personalized_product', models.ForeignKey(help_text='Produto personalizado', on_delete=django.db.models.deletion.CASCADE, to='estruturas_app.personalizedproduct')),
                ('ubo', models.ForeignKey(help_text='UBO associado', on_delete=django.db.models.deletion.CASCADE, to='estruturas_app.ubo')),
            ],
            options={
                'verbose_name': 'Personalized Product UBO',
                'verbose_name_plural': 'Personalized Product UBOs',
            },
        ),
        migrations.AddField(
            model_name='personalizedproduct',
            name='ubos',
            field=models.ManyToManyField(help_text='UBOs associados a este produto personalizado', through='estruturas_app.PersonalizedProductUBO', to='estruturas_app.ubo'),
        ),
        migrations.AddIndex(
            model_name='personalizedproductubo',
            index=models.Index(fields=['personalized_product', 'ativo'], name='estruturas__persona_000a10_idx'),
        ),
        migrations.AddIndex(
            model_name='personalizedproductubo',
            index=models.Index(fields=['ubo', 'ativo'], name='estruturas__ubo_id_d40c90_idx'),
        ),
        migrations.AddIndex(
            model_name='personalizedproductubo',
            index=models.Index(fields=['data_inicio'], name='estruturas__data_in_889687_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='personalizedproductubo',
            unique_together={('personalized_product', 'ubo', 'role')},
        ),
        migrations.AddIndex(
            model_name='personalizedproduct',
            index=models.Index(fields=['base_product'], name='estruturas__base_pr_4c9fb2_idx'),
        ),
        migrations.AddIndex(
            model_name='personalizedproduct',
            index=models.Index(fields=['base_structure'], name='estruturas__base_st_332c24_idx'),
        ),
        migrations.AddIndex(
            model_name='personalizedproduct',
            index=models.Index(fields=['status'], name='estruturas__status_0c6fcb_idx'),
        ),
        migrations.AddIndex(
            model_name='personalizedproduct',
            index=models.Index(fields=['version_number'], name='estruturas__version_c87bed_idx'),
        ),
        migrations.AddIndex(
            model_name='personalizedproduct',
            index=models.Index(fields=['ativo'], name='estruturas__ativo_4597eb_idx'),
        ),
    ]
