# Generated by Django 4.2.7 on 2025-07-05 18:51

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ConfiguracaoSalva',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Configuration name', max_length=100)),
                ('descricao', models.TextField(blank=True, help_text='Configuration description')),
                ('configuracao', models.JSONField(help_text='Complete configuration data')),
                ('custo_estimado', models.DecimalField(blank=True, decimal_places=2, help_text='Estimated total cost', max_digits=12, null=True)),
                ('tempo_estimado', models.IntegerField(blank=True, help_text='Estimated implementation time in days', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Saved Configuration',
                'verbose_name_plural': 'Saved Configurations',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='Estrutura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Structure name', max_length=100)),
                ('tipo', models.CharField(choices=[('BDAO_SAC', 'Bahamas DAO SAC'), ('WYOMING_DAO_LLC', 'Wyoming DAO LLC'), ('BTS_VAULT', 'BTS Vault'), ('WYOMING_FOUNDATION', 'Wyoming Statutory Foundation'), ('WYOMING_CORP', 'Wyoming Corporation'), ('NATIONALIZATION', 'Nacionalização'), ('FUND_TOKEN', 'Fund Token as a Service')], help_text='Structure type', max_length=50)),
                ('descricao', models.TextField(help_text='Detailed description of the structure')),
                ('custo_base', models.DecimalField(decimal_places=2, help_text='Base setup cost in USD', max_digits=10)),
                ('custo_manutencao', models.DecimalField(decimal_places=2, help_text='Annual maintenance cost in USD', max_digits=10)),
                ('tempo_implementacao', models.IntegerField(help_text='Implementation time in days', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(365)])),
                ('complexidade', models.IntegerField(choices=[(1, 'Level 1'), (2, 'Level 2'), (3, 'Level 3'), (4, 'Level 4'), (5, 'Level 5')], help_text='Complexity level from 1 (simple) to 5 (very complex)')),
                ('impacto_tributario_eua', models.TextField(help_text='Detailed tax implications in the United States')),
                ('impacto_tributario_brasil', models.TextField(help_text='Detailed tax implications in Brazil')),
                ('impacto_tributario_outros', models.TextField(blank=True, help_text='Tax implications in other jurisdictions')),
                ('nivel_confidencialidade', models.IntegerField(choices=[(1, 'Level 1'), (2, 'Level 2'), (3, 'Level 3'), (4, 'Level 4'), (5, 'Level 5')], help_text='Confidentiality level from 1 (low) to 5 (very high)')),
                ('protecao_patrimonial', models.IntegerField(choices=[(1, 'Level 1'), (2, 'Level 2'), (3, 'Level 3'), (4, 'Level 4'), (5, 'Level 5')], help_text='Asset protection level from 1 (low) to 5 (very high)')),
                ('impacto_privacidade', models.TextField(help_text='Detailed privacy implications and protections')),
                ('facilidade_banking', models.IntegerField(choices=[(1, 'Level 1'), (2, 'Level 2'), (3, 'Level 3'), (4, 'Level 4'), (5, 'Level 5')], help_text='Banking facility level from 1 (difficult) to 5 (very easy)')),
                ('documentacao_necessaria', models.TextField(help_text='Required documentation for setup')),
                ('formularios_obrigatorios_eua', models.TextField(blank=True, help_text='Required US forms and reporting obligations')),
                ('formularios_obrigatorios_brasil', models.TextField(blank=True, help_text='Required Brazilian forms and reporting obligations')),
                ('ativo', models.BooleanField(default=True, help_text='Whether structure is active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Legal Structure',
                'verbose_name_plural': 'Legal Structures',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Template',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Template name', max_length=100)),
                ('categoria', models.CharField(choices=[('TECH', 'Technology'), ('REAL_ESTATE', 'Real Estate'), ('TRADING', 'Trading'), ('FAMILY_OFFICE', 'Family Office'), ('INVESTMENT', 'Investment'), ('GENERAL', 'General')], help_text='Business sector category', max_length=20)),
                ('complexidade_template', models.CharField(choices=[('BASIC', 'Basic Configuration'), ('INTERMEDIATE', 'Intermediate Configuration'), ('ADVANCED', 'Advanced Configuration'), ('EXPERT', 'Expert Configuration')], default='BASIC', help_text='Template complexity level', max_length=20)),
                ('descricao', models.TextField(help_text='Detailed template description')),
                ('configuracao', models.JSONField(help_text='Complete structure configuration saved as JSON')),
                ('custo_total', models.DecimalField(decimal_places=2, help_text='Total cost for all structures in template', max_digits=12)),
                ('tempo_total_implementacao', models.IntegerField(help_text='Total implementation time in days')),
                ('uso_count', models.IntegerField(default=0, help_text='Number of times this template has been used')),
                ('publico_alvo', models.TextField(blank=True, help_text='Target audience description')),
                ('casos_uso', models.TextField(blank=True, help_text='Common use cases for this template')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ativo', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Configuration Template',
                'verbose_name_plural': 'Configuration Templates',
                'ordering': ['-uso_count', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='AlertaJurisdicao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jurisdicao', models.CharField(choices=[('US', 'United States'), ('BR', 'Brazil'), ('BS', 'Bahamas'), ('WY', 'Wyoming'), ('GLOBAL', 'Global/Multiple')], help_text='Applicable jurisdiction', max_length=10)),
                ('tipo_alerta', models.CharField(choices=[('TAX', 'Tax Obligation'), ('COMPLIANCE', 'Compliance Requirement'), ('REPORTING', 'Reporting Obligation'), ('DEADLINE', 'Important Deadline'), ('REGULATORY', 'Regulatory Change')], help_text='Type of alert', max_length=20)),
                ('titulo', models.CharField(help_text='Alert title', max_length=200)),
                ('descricao', models.TextField(help_text='Detailed alert description')),
                ('prioridade', models.IntegerField(choices=[(1, 'Priority 1'), (2, 'Priority 2'), (3, 'Priority 3'), (4, 'Priority 4'), (5, 'Priority 5')], default=3, help_text='Alert priority from 1 (low) to 5 (critical)')),
                ('ativo', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('estruturas_aplicaveis', models.ManyToManyField(blank=True, help_text='Structures to which this alert applies', to='estruturas_app.estrutura')),
            ],
            options={
                'verbose_name': 'Jurisdiction Alert',
                'verbose_name_plural': 'Jurisdiction Alerts',
                'ordering': ['-prioridade', 'jurisdicao'],
            },
        ),
        migrations.CreateModel(
            name='RegraValidacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_relacionamento', models.CharField(choices=[('REQUIRED', 'Required Combination'), ('RECOMMENDED', 'Recommended Combination'), ('INCOMPATIBLE', 'Incompatible Combination'), ('CONDITIONAL', 'Conditional Combination'), ('SYNERGISTIC', 'Synergistic Combination')], help_text='Type of relationship between structures', max_length=20)),
                ('severidade', models.CharField(choices=[('ERROR', 'Error - Blocks configuration'), ('WARNING', 'Warning - Potential issue'), ('INFO', 'Information - Suggestion')], default='INFO', help_text='Severity level of the validation rule', max_length=10)),
                ('descricao', models.TextField(help_text='Detailed description of the validation rule')),
                ('condicoes', models.JSONField(blank=True, help_text='JSON object containing specific conditions for the rule', null=True)),
                ('jurisdicao_aplicavel', models.CharField(blank=True, help_text='Specific jurisdiction where this rule applies', max_length=100)),
                ('ativo', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('estrutura_a', models.ForeignKey(help_text='First structure in the relationship', on_delete=django.db.models.deletion.CASCADE, related_name='regras_como_a', to='estruturas_app.estrutura')),
                ('estrutura_b', models.ForeignKey(help_text='Second structure in the relationship', on_delete=django.db.models.deletion.CASCADE, related_name='regras_como_b', to='estruturas_app.estrutura')),
            ],
            options={
                'verbose_name': 'Validation Rule',
                'verbose_name_plural': 'Validation Rules',
                'unique_together': {('estrutura_a', 'estrutura_b', 'tipo_relacionamento')},
            },
        ),
    ]
